name: Deploy Backend to AWS Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  PYTHON_VERSION: '3.11'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          # Use access keys (comment out if using OIDC role above)
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Cache SAM build
        uses: actions/cache@v4
        with:
          path: .aws-sam
          key: ${{ runner.os }}-sam-${{ hashFiles('**/template.yaml') }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-sam-

      - name: SAM Build
        run: sam build --use-container

      - name: SAM Deploy
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name crypto-stock-portfolio-backend \
            --s3-prefix crypto-stock-portfolio-backend \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.AWS_REGION }} \
            --parameter-overrides "JWTSecret=${{ secrets.JWT_SECRET }} CoinGeckoAPIKey=${{ secrets.COINGECKO_API_KEY }}

      - name: Get API Endpoint
        id: get-endpoint
        run: |
          API_ENDPOINT=$(aws cloudformation describe-stacks \
            --stack-name crypto-stock-portfolio-backend \
            --query 'Stacks[0].Outputs[?OutputKey==`ApiEndpoint`].OutputValue' \
            --output text \
            --region ${{ env.AWS_REGION }})
          echo "api_endpoint=$API_ENDPOINT" >> $GITHUB_OUTPUT
          echo "API Endpoint: $API_ENDPOINT"

      - name: Deployment Summary
        run: |
          echo "### Deployment Successful :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**API Endpoint:** ${{ steps.get-endpoint.outputs.api_endpoint }}" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "**Stack Name:** crypto-stock-portfolio-backend" >> $GITHUB_STEP_SUMMARY
